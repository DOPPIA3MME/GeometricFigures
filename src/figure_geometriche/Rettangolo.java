/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package figure_geometriche;

import static java.lang.Math.sqrt;
import javax.swing.JOptionPane;

/**
 *
 * @author Maurizio
 */
public class Rettangolo extends javax.swing.JFrame {

      float base;
      float altezza;
      float area;
      float perimetro;
      float diagonale;
      int INPUT=0;
      
      boolean perimetrovuoto=true;
      boolean basevuoto=true;
      boolean altezzavuoto=true;
      boolean areavuoto=true;
      boolean diagonalevuoto=true;
      
      
      
     
    public Rettangolo() {
        initComponents();
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        bFatto = new javax.swing.JButton();
        TextI_base = new javax.swing.JTextField();
        TextI_perimetro = new javax.swing.JTextField();
        TextI_altezza = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        TextI_diagonale = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        TextI_area = new javax.swing.JTextField();
        TextO_diagonale = new javax.swing.JTextField();
        TextO_base = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        TextO_area = new javax.swing.JTextField();
        TextO_perimetro = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        TextO_altezza = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("RETTANGOLO");

        jLabel2.setText("Inserisci la base");

        jLabel3.setText("Inserisci l'altezza");

        bFatto.setText("FATTO");
        bFatto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFattoActionPerformed(evt);
            }
        });

        TextI_base.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TextI_baseMousePressed(evt);
            }
        });

        TextI_perimetro.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                TextI_perimetroAncestorMoved(evt);
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                TextI_perimetroAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                TextI_perimetroAncestorRemoved(evt);
            }
        });
        TextI_perimetro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TextI_perimetroMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                TextI_perimetroMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TextI_perimetroMousePressed(evt);
            }
        });
        TextI_perimetro.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                TextI_perimetroComponentHidden(evt);
            }
        });
        TextI_perimetro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextI_perimetroActionPerformed(evt);
            }
        });

        TextI_altezza.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TextI_altezzaMousePressed(evt);
            }
        });

        jLabel4.setText("Inserisci perimetro");

        jLabel9.setText("Inserisci diagonale");

        TextI_diagonale.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                TextI_diagonaleAncestorMoved(evt);
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                TextI_diagonaleAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                TextI_diagonaleAncestorRemoved(evt);
            }
        });
        TextI_diagonale.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TextI_diagonaleMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                TextI_diagonaleMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TextI_diagonaleMousePressed(evt);
            }
        });
        TextI_diagonale.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                TextI_diagonaleComponentHidden(evt);
            }
        });
        TextI_diagonale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextI_diagonaleActionPerformed(evt);
            }
        });

        jLabel7.setText("Inserisci area");

        TextI_area.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                TextI_areaAncestorMoved(evt);
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                TextI_areaAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                TextI_areaAncestorRemoved(evt);
            }
        });
        TextI_area.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TextI_areaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                TextI_areaMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TextI_areaMousePressed(evt);
            }
        });
        TextI_area.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                TextI_areaComponentHidden(evt);
            }
        });
        TextI_area.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextI_areaActionPerformed(evt);
            }
        });

        TextO_diagonale.setEditable(false);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, TextI_diagonale, org.jdesktop.beansbinding.ELProperty.create("${text}"), TextO_diagonale, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        TextO_base.setEditable(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, TextI_base, org.jdesktop.beansbinding.ELProperty.create("${text}"), TextO_base, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        TextO_base.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextO_baseActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 255));
        jLabel6.setText("Base");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 255));
        jLabel5.setText("Area                 :");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 255));
        jLabel8.setText("Perimetro       :");

        TextO_area.setEditable(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, TextI_area, org.jdesktop.beansbinding.ELProperty.create("${text}"), TextO_area, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        TextO_perimetro.setEditable(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, TextI_perimetro, org.jdesktop.beansbinding.ELProperty.create("${text}"), TextO_perimetro, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel10.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 255));
        jLabel10.setText("Diagonale        :");

        jLabel11.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 255));
        jLabel11.setText("Altezza");

        TextO_altezza.setEditable(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, TextI_altezza, org.jdesktop.beansbinding.ELProperty.create("${text}"), TextO_altezza, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        TextO_altezza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextO_altezzaActionPerformed(evt);
            }
        });

        jButton1.setText("RESET");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jMenu1.setText("Aiuto");

        jMenuItem1.setText("Caratteristiche");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Formule");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel1))
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton1)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TextI_altezza)
                    .addComponent(TextI_area)
                    .addComponent(TextI_diagonale)
                    .addComponent(TextI_perimetro)
                    .addComponent(TextI_base, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TextO_diagonale, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                    .addComponent(TextO_perimetro)
                    .addComponent(TextO_base)
                    .addComponent(TextO_area)
                    .addComponent(TextO_altezza))
                .addContainerGap(71, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bFatto)
                .addGap(132, 132, 132))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TextI_base, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(TextI_altezza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextI_perimetro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(TextI_diagonale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(TextI_area, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bFatto)
                    .addComponent(jButton1))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextO_base, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextO_altezza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextO_perimetro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextO_diagonale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextO_area, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
     public void Calcola_Area()
    {
         area=base*altezza;
    }
    
    
     public void Calcola_Perimetro()
    {
         perimetro=2*base+2*altezza;
    
    }
    
    public void Calcola_Diagonale()
    {
         diagonale= (float) sqrt((base*base)+(altezza*altezza));
    
    }
    
    public void Calcola_Base()
    {
         base= (perimetro-2*altezza)/2;
    
    }
    
    public void Calcola_Altezza()
    {
         altezza= (perimetro-2*base)/2;
    
    }
    
    
     public void Calcola_Base_d()
    {
       
            base= (float) sqrt(diagonale*diagonale-altezza*altezza);
    
    }
    
    public void Calcola_Altezza_d()
    {
       
         altezza= (float) sqrt((diagonale*diagonale)-(base*base));
       
    }
    
    
    public void Calcola_Base_a()
    {
         base= area/altezza;
    
    }
    
    public void Calcola_Altezza_a()
    {
         altezza= area/base;
    
    }
    
    
    
    
    private void bFattoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFattoActionPerformed

                        //Input : base
                        try
                        {
                  
                             //prendo la stringa che cè nella textinputlato e la inserisco nella variabile lato trasformandola in float
                             base = Float.parseFloat(TextI_base.getText());
                             basevuoto=false;
                             
                             
                             if(base<=0) { 
                                 JOptionPane.showMessageDialog(null, "Valore base impossibile, inserisci un valore valido", "Error", JOptionPane.ERROR_MESSAGE);
                                 TextI_base.setText("");
                                 INPUT=0;
                            } else INPUT=1;
                             
                        }
                        catch(NumberFormatException e)
                        {
 //                           JOptionPane.showMessageDialog(null, "Non ha senso inserire una lettera", "Error", JOptionPane.ERROR_MESSAGE); 
                               
                            basevuoto=true;
                           
                        }
      
            
                        
                        
                        
                        
                        //Input : altezza
                        try
                        {
            
                             //prendo la stringa che cè nella textinputlato e la inserisco nella variabile lato trasformandola in float
                              altezza = Float.parseFloat(TextI_altezza.getText());
                              altezzavuoto=false;
       
                              if(altezza<=0)
                             {
                                 JOptionPane.showMessageDialog(null, "Valore altezza impossibile, inserisci un valore valido", "Error", JOptionPane.ERROR_MESSAGE); 
                                 TextI_altezza.setText("");
                                 INPUT=0;
                             }
                              else INPUT=1;
                      
                        }
                        catch(NumberFormatException e)
                        {
 //                           JOptionPane.showMessageDialog(null, "Valore altezza impossibile, inserisci un valore valido", "Error", JOptionPane.ERROR_MESSAGE); 
                            altezzavuoto=true;
                        }
                        
                        
                        
                        //se lutente inserisce base a altezza posso calcolarmi
                        if(altezzavuoto==false&&basevuoto==false)
                        {    
                            //calcolo il perimetro avendo base e altezza
                             Calcola_Perimetro();
                             //calcolo l'area avendo base e altezza
                             Calcola_Area();
                             //calcolo la diagonale avendo base e altezza
                             Calcola_Diagonale();
                           System.out.println("Se ho inserito base e altezza ho calcolato perimetro:"+perimetro+"area:"+area+"diagonale"+diagonale);
                        }
                          
                        
                        
                        
                        
                        
                        
                        
                      //Input : perimetro 
                    try
                    {
            
                          //prendo la stringa che cè nella textinputperim e la inserisco nella variabile perim trasformandola in float
                          perimetro = Float.parseFloat(TextI_perimetro.getText());
                          perimetrovuoto=false;
                          
                          if(perimetro<=0)
                             {
                                 JOptionPane.showMessageDialog(null, "Valore perimetro impossibile, inserisci un valore valido", "Error", JOptionPane.ERROR_MESSAGE); 
                                 TextI_perimetro.setText("");
                                 INPUT=0;
                             }
                             else INPUT=1;
   
                    }
                    catch(NumberFormatException e)
                    {
 //                       JOptionPane.showMessageDialog(null, "Valore perimetro impossibile, inserisci un valore valido", "Error", JOptionPane.ERROR_MESSAGE); 
                        perimetrovuoto=true;
                    }
                    
                    
                    
                    
                    
                    
                    
                    if(altezzavuoto==false&&perimetrovuoto==false)
                    {
                        //calcolo la base avendo altezza e perimetro
                        Calcola_Base();
                          //calcolo l'area avendo base e altezza
                             Calcola_Area();
                             //calcolo la diagonale avendo base e altezza
                             Calcola_Diagonale();
                   
                    }
                     //se ho messo base e perimetro  
                    if(basevuoto==false&&perimetrovuoto==false)
                    {
                        //calcolo la base avendo altezza e perimetro
                        Calcola_Altezza();
                          //calcolo l'area avendo base e altezza
                             Calcola_Area();
                             //calcolo la diagonale avendo base e altezza
                             Calcola_Diagonale();
                   
                    }
                        
                    
                    
                    
                    
                    
                    
                    //Input : Area
                    try
                    {
         
                         //prendo la stringa che cè nella textinputperim e la inserisco nella variabile perim trasformandola in float
                         area = Float.parseFloat(TextI_area.getText());
                          areavuoto=false;
                          
                          if(area<=0)
                             {
                                 JOptionPane.showMessageDialog(null, "Valore area impossibile, inserisci un valore valido", "Error", JOptionPane.ERROR_MESSAGE); 
                                 TextI_area.setText("");
                                 INPUT=0;
                             }
                             else INPUT=1;
                     
                    }
                    catch(NumberFormatException e)
                    {
 //                        JOptionPane.showMessageDialog(null, "Valore area impossibile, inserisci un valore valido", "Error", JOptionPane.ERROR_MESSAGE); 
                        areavuoto=true;
                    }
                    
                    
                    
                     //se ho messo altezza e area  
                      if(altezzavuoto==false&&areavuoto==false)
                    {
                        //calcolo la base avendo altezza e perimetro
                        Calcola_Base_a();
                          //calcolo l'area avendo base e altezza
                             Calcola_Perimetro();
                             //calcolo la diagonale avendo base e altezza
                             Calcola_Diagonale();
                   
                    }
                     //se ho messo base e area  
                    if(basevuoto==false&&areavuoto==false)
                    {
                        //calcolo la base avendo altezza e perimetro
                        Calcola_Altezza_a();
                          //calcolo l'area avendo base e altezza
                             Calcola_Perimetro();
                             //calcolo la diagonale avendo base e altezza
                             Calcola_Diagonale();
                   
                    }
                    
                    
                    
                    
                    
                    
                    
                    
                    
                     //se inserisco la diagonale
                    try
                    {
             
                         //prendo la stringa che cè nella textinputperim e la inserisco nella variabile perim trasformandola in float
                         diagonale = Float.parseFloat(TextI_diagonale.getText());
                         diagonalevuoto=false;
                         
                         if(diagonale<base||diagonale<altezza||diagonale<=0)
                         {
                                 JOptionPane.showMessageDialog(null, "Valore diagonale impossibile,inserisci un valore valido", "Error", JOptionPane.ERROR_MESSAGE); 
                                  TextO_diagonale.setText("");
                                  INPUT=0;
                         }
                         else INPUT=1;
                    }
                    catch(NumberFormatException e)
                    {
                       // JOptionPane.showMessageDialog(null, "Valore diagonale impossibile, inserisci un valore valido", "Error", JOptionPane.ERROR_MESSAGE); 
                        diagonalevuoto=true;
                    }
                    
              
                    
                    
                    
                     //se ho messo altezza e diagonale  
                      if(altezzavuoto==false&&diagonalevuoto==false)
                    {
                           //calcolo la base avendo altezza e perimetro
                             Calcola_Base_d();
                          //calcolo l'area avendo base e altezza
                             Calcola_Perimetro();
                             //calcolo la diagonale avendo base e altezza
                             Calcola_Area();
                   
                    }
                     //se ho messo base e diagonale
                    if(basevuoto==false&&diagonalevuoto==false)
                    {
                        //calcolo la base avendo altezza e perimetro
                        Calcola_Altezza_d();
                          //calcolo l'area avendo base e altezza
                             Calcola_Perimetro();
                             //calcolo la diagonale avendo base e altezza
                             Calcola_Area();
                   
                    }
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                   
                    
                   
                    
                    
                    
                    
                
                    
                    
                    
                    
                     
                    
              
                if(INPUT==1)
                {
                      if(basevuoto==true&&altezzavuoto==true&&perimetrovuoto==true&&areavuoto==true&&diagonalevuoto==true)
                     JOptionPane.showMessageDialog(null, "   Nessun dato in input! Devi inserire un numero.\nAttento a non"
                             + " usare la virgola al posto del punto\n                         NABBO!", "Error", 
                             JOptionPane.ERROR_MESSAGE);


                    else if(altezzavuoto==true&&basevuoto==true)  
                     JOptionPane.showMessageDialog(null, "     Altezza e base assenti! Devi inserirne almeno una.\nAttento a non usare "
                             + "la virgola al posto del punto\n                         NABBO!", "Error", JOptionPane.ERROR_MESSAGE); 

                    else if(basevuoto==false&&altezzavuoto==true&&perimetrovuoto==true&&areavuoto==true&&diagonalevuoto==true)
                        JOptionPane.showMessageDialog(null, "Solo la base non basta,devi inserire almeno un altro dato"
                                + " o area", "Error", JOptionPane.ERROR_MESSAGE); 

                    else if(altezzavuoto==false&&basevuoto==true&&perimetrovuoto==true&&areavuoto==true&&diagonalevuoto==true)
                        JOptionPane.showMessageDialog(null, "Solo l'altezza non basta, devi inserire almeno un altro "
                                + "dato", "Error", JOptionPane.ERROR_MESSAGE); 
                    else if(perimetro<=0||area<=0||diagonale<=0)
                           JOptionPane.showMessageDialog(null, "Hai sbagliato sicuramente qualche input,ricontrolla!", "Error", JOptionPane.ERROR_MESSAGE); 
                    else{
            
                    TextO_base.setText(String.valueOf(base));
                    TextO_altezza.setText(String.valueOf(altezza));
                    TextO_area.setText(String.valueOf(area));
                    TextO_perimetro.setText(String.valueOf(perimetro));
                    TextO_diagonale.setText(String.valueOf(diagonale));
                    
                    
                    
                    /*
                    TextO_altezza.setText("");
                    TextO_base.setText("");
                    TextO_diagonale.setText("");
                    TextO_area.setText("");
                    TextO_perimetro.setText("");
                    */
            }
             
         }
                
                System.out.println("Fine");
                
    }//GEN-LAST:event_bFattoActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
         
            Principale.SCELTA=2;
            ImageTest i= new ImageTest();
        try {
            i.loadimage("Formule_rettangolo");
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
                 
              Principale.SCELTA=1;
              ImageTest i= new ImageTest();
              
        try {
            i.loadimage("R_caratteristiche");
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void TextI_baseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TextI_baseMousePressed

        
    }//GEN-LAST:event_TextI_baseMousePressed

    private void TextI_perimetroAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_TextI_perimetroAncestorMoved

    }//GEN-LAST:event_TextI_perimetroAncestorMoved

    private void TextI_perimetroAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_TextI_perimetroAncestorAdded

    }//GEN-LAST:event_TextI_perimetroAncestorAdded

    private void TextI_perimetroAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_TextI_perimetroAncestorRemoved

    }//GEN-LAST:event_TextI_perimetroAncestorRemoved

    private void TextI_perimetroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TextI_perimetroMouseClicked

    }//GEN-LAST:event_TextI_perimetroMouseClicked

    private void TextI_perimetroMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TextI_perimetroMouseEntered

    }//GEN-LAST:event_TextI_perimetroMouseEntered

    private void TextI_perimetroMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TextI_perimetroMousePressed
      
    }//GEN-LAST:event_TextI_perimetroMousePressed

    private void TextI_perimetroComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_TextI_perimetroComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_TextI_perimetroComponentHidden

    private void TextI_perimetroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextI_perimetroActionPerformed

    }//GEN-LAST:event_TextI_perimetroActionPerformed

    private void TextI_altezzaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TextI_altezzaMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextI_altezzaMousePressed

    private void TextI_diagonaleAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_TextI_diagonaleAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_TextI_diagonaleAncestorMoved

    private void TextI_diagonaleAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_TextI_diagonaleAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_TextI_diagonaleAncestorAdded

    private void TextI_diagonaleAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_TextI_diagonaleAncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_TextI_diagonaleAncestorRemoved

    private void TextI_diagonaleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TextI_diagonaleMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_TextI_diagonaleMouseClicked

    private void TextI_diagonaleMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TextI_diagonaleMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_TextI_diagonaleMouseEntered

    private void TextI_diagonaleMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TextI_diagonaleMousePressed
       
    }//GEN-LAST:event_TextI_diagonaleMousePressed

    private void TextI_diagonaleComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_TextI_diagonaleComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_TextI_diagonaleComponentHidden

    private void TextI_diagonaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextI_diagonaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextI_diagonaleActionPerformed

    private void TextI_areaAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_TextI_areaAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_TextI_areaAncestorMoved

    private void TextI_areaAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_TextI_areaAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_TextI_areaAncestorAdded

    private void TextI_areaAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_TextI_areaAncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_TextI_areaAncestorRemoved

    private void TextI_areaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TextI_areaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_TextI_areaMouseClicked

    private void TextI_areaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TextI_areaMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_TextI_areaMouseEntered

    private void TextI_areaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TextI_areaMousePressed
       
    }//GEN-LAST:event_TextI_areaMousePressed

    private void TextI_areaComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_TextI_areaComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_TextI_areaComponentHidden

    private void TextI_areaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextI_areaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextI_areaActionPerformed

    private void TextO_baseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextO_baseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextO_baseActionPerformed

    private void TextO_altezzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextO_altezzaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextO_altezzaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         TextO_altezza.setText("");
         TextO_base.setText("");
         TextO_diagonale.setText("");
         TextO_area.setText("");
         TextO_perimetro.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TextI_altezza;
    private javax.swing.JTextField TextI_area;
    private javax.swing.JTextField TextI_base;
    private javax.swing.JTextField TextI_diagonale;
    private javax.swing.JTextField TextI_perimetro;
    private javax.swing.JTextField TextO_altezza;
    private javax.swing.JTextField TextO_area;
    private javax.swing.JTextField TextO_base;
    private javax.swing.JTextField TextO_diagonale;
    private javax.swing.JTextField TextO_perimetro;
    private javax.swing.JButton bFatto;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
